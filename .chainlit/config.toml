[project]
# Whether to enable telemetry (default: true). No personal data is collected.
enable_telemetry = true

# List of environment variables to be provided by each user to use the app.
user_env = []

# Duration (in seconds) during which the session is saved when the connection is lost
session_timeout = 3600

# Enable third parties caching (e.g LangChain cache)
cache = false

# Authorized origins
allow_origins = ["*"]

# Follow symlink for asset mount (see https://github.com/Chainlit/chainlit/issues/317)
# follow_symlink = false

[features]
# Show the prompt playground
prompt_playground = true

# Process and display HTML in messages. This can be a security risk (see https://stackoverflow.com/questions/19603097/why-is-it-dangerous-to-render-user-generated-html-or-javascript)
unsafe_allow_html = false

# Process and display mathematical expressions. This can clash with "$" characters in messages.
latex = false

# Automatically tag threads the first time a user sends a message. Tagging is done using the first 100 characters of the message.
auto_tag_thread = true

# Authorize users to upload files with messages
multi_modal = true

edit_message = true

# Allows user to use speech to text
[features.speech_to_text]
enabled = false
# See all languages here https://github.com/JamesBrill/react-speech-kit#userecognition-hook
# language = "en-US"

# Authorize users to spontaneously upload files with messages
[features.spontaneous_file_upload]
enabled = true
accept = ["*/*"]
max_files = 20
max_size_mb = 500

[features.audio]
# Threshold for audio recording
min_decibels = -45
# Delay for the user to continue speaking in MS
initial_silence_timeout = 3000
# Delay for the user to continue speaking in MS
silence_timeout = 1500
# Above this duration (MS), the user will be asked to leave a message
max_duration = 15000
# Duration of the audio chunks in MS
chunk_duration = 1000
# Sample rate of the audio
sample_rate = 44100

[UI]
# Name of the app and chatbot.
name = "PCDC GraphQL Query Generator"

# Show the readme while the thread is empty.
show_readme_as_default = true

# Description of the app and chatbot. This is used for HTML tags.
description = "Generate GraphQL queries for PCDC data using natural language."

# Large size content are by default collapsed for a cleaner ui
default_collapse_content = true

# The default value for the expand messages settings.
default_expand_messages = false

# Hide the chain of thought details from the user in the UI.
hide_cot = false

# Link to your github repo. This will add a github button in the UI's header.
# github = ""

# Specify a CSS file that can be used to customize the user interface.
# The CSS file can be served from the public directory or via an external link.
# custom_css = "/public/style.css"

# Specify a Javascript file that can be used to customize the user interface.
# The Javascript file can be served from the public directory.
# custom_js = "/public/script.js"

# Specify a custom font url.
# custom_font = "https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap"

# Specify a custom meta image url.
# custom_meta_image_url = "https://chainlit-cloud.s3.eu-west-3.amazonaws.com/logo/chainlit_banner.png"

# Specify a custom build directory for the UI. This is typically used for development or when you want to customize the UI using npm packages.
# custom_build = "./public/build"

# Override default MUI light theme. (Check theme.ts)
[UI.theme]
default_temperature = 0.7
layout = "wide"
font_family = "Inter, sans-serif"
[UI.theme.light]
#background = "#FAFAFA"
#paper = "#FFFFFF"

[UI.theme.light.primary]
#main = "#F80061"
#dark = "#980039"
#light = "#FFE7EB"

# Override default MUI dark theme. (Check theme.ts)
[UI.theme.dark]
#background = "#FAFAFA"
#paper = "#FFFFFF"

[UI.theme.dark.primary]
#main = "#F80061"
#dark = "#980039"
#light = "#FFE7EB"

[meta]
generated_by = "1.0.0"

# Data persistence configuration
[data_persistence]
# Enable data persistence (required for chat history)
enabled = true

# Where to store the data. Can be "sqlite", "postgresql", "redis" etc.
storage_provider = "sqlite"

# SQLite specific configuration
[data_persistence.sqlite]
# Path to the SQLite database file
path = "chainlit.db"

# PostgreSQL configuration (alternative to SQLite)
# [data_persistence.postgresql]
# url = "postgresql://user:password@localhost:5432/chainlit"

# Redis configuration (alternative to SQLite)
# [data_persistence.redis]
# url = "redis://localhost:6379"

# Authentication configuration (optional but recommended for chat history)
[auth]
# Enable authentication
enabled = true

# Secret for signing authentication tokens (generate with: chainlit create-secret)
secret = "YsvH-Cvd3ybb6Mz13A1Yjb1xaJmLVOr_A9rHumT0OqI"

# Authentication provider
provider = "password"  # or "oauth", "header"

# Header authentication (simple for development)
# [auth.header]
# header_name = "X-User-ID"

# OAuth authentication (for production)
# [auth.oauth]
# provider = "google"
# client_id = "your-client-id"
# client_secret = "your-client-secret"
